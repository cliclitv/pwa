{"version":3,"sources":["serviceWorker.ts","config.ts","services/post.ts","services/dirty.ts","components/Overview.tsx","components/Recommend.tsx","components/Ranking.tsx","components/Calendar.tsx","components/Latest.tsx","pages/Home.tsx","services/user.ts","pages/Login.tsx","utils.ts","services/video.ts","pages/Video.tsx","pages/Post.tsx","pages/Search.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","domain","list","type","tag","page","pageSize","a","status","uid","fetch","resp","json","details","id","body","result","key","getSuo","content","m","slice","props","posts","Grid","map","item","Flex","hAlign","vAlign","styles","width","padding","column","to","Image","src","height","marginBottom","title","useState","setPosts","useEffect","getPostList","then","res","Overview","getRanking","Date","getDay","day","setDay","ret","forEach","time","split","toString","push","Menu","className","defaultActiveIndex","primary","items","onItemClick","_","index","circular","maxWidth","maxHeight","margin","style","Recommend","Ranking","Latest","user","cookie","getJSON","token","get","clearCache","undefined","remove","avatar","qq","test","hash","md5","login","u","method","JSON","stringify","code","set","isLogin","fields","label","required","control","as","Input","Button","display","flexDirection","alignItems","marginTop","history","useHistory","Form","onSubmit","name","document","getElementById","value","pwd","goBack","alert","useQuery","URLSearchParams","useLocation","search","videos","VideoList","setVideoList","getVideoList","postId","videoList","uqq","alt","oid","query","justifyContent","Video","autoPlay","t","useRef","post","setPost","getPostDetails","w","clientWidth","indexOf","current","innerHTML","snarkdown","ref","getSearchList","data","setData","headerStyle","Avatar","size","image","searchStyle","fluid","icon","onKeyPress","evt","currentTarget","flexGrow","Header","path","Search","Login","Home","Footer","lastTime","addEventListener","touches","length","preventDefault","passive","nowTime","getTime","disableScreenScale","ReactDOM","render","darkMode","React","matchMedia","matches","setMatch","active","queryList","updateMatch","addListener","removeListener","useMediaQuery","theme","useMemo","themes","teamsDark","teams","Provider","App","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5721d74.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const domain = {\n  admin: \"https://admin.clicli.me\",\n  home: \"https://www.clicli.me\",\n  api: \"https://api.clicli.us\",\n  jx: \"https://jx.clicli.us\"\n};\n","import { domain } from \"config\";\n\nexport interface Post {\n  id?: string;\n  content?: string;\n  uqq?: string;\n  uname?: string;\n  uid?: number;\n  title?: string;\n  tag?: string;\n  time?: string;\n  status?: string;\n}\n\nexport async function list(\n  type: string,\n  tag: string,\n  page: number,\n  pageSize: number,\n  status = \"public\",\n  uid = \"\"\n): Promise<{ posts: Post[] }> {\n  const resp = await fetch(\n    `${domain.api}/posts?status=${status}&sort=${type}&tag=${tag}&uid=${uid}&page=${page}&pageSize=${pageSize}`\n  );\n\n  return resp.json();\n}\n\nexport async function details(id: string) {\n  const resp = await fetch(`${domain.api}/post/${id}`);\n  const body = await resp.json();\n  return body.result;\n}\n\nexport async function ranking(): Promise<{ posts: Post[] }> {\n  const resp = await fetch(`${domain.api}/rank`);\n  return resp.json();\n}\n\nexport async function search(key: string): Promise<{ posts: Post[] }> {\n  const resp = await fetch(`${domain.api}/search/posts?key=${key}`);\n  return resp.json();\n}\n","export function getSuo(content: string) {\n  let m = content.match(/suo(.+?)\\)/i);\n  return m\n    ? m[1].slice(2)\n    : \"https://wx4.sinaimg.cn/mw690/0060lm7Tly1fvmtrka9p5j30b40b43yo.jpg\";\n}\n","import { Flex, Image, Grid } from \"@fluentui/react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getSuo } from \"services/dirty\";\nimport { Post } from \"services/post\";\n\nexport default (props: { posts: Post[] }) => {\n  const posts = props.posts;\n  return (\n    <Grid\n      content={posts?.map(item => {\n        return (\n          <Flex\n            hAlign=\"center\"\n            vAlign=\"center\"\n            styles={{\n              width: \"182px\",\n              padding: \"16px\"\n            }}\n            column\n            key={item.id}\n          >\n            <Link to={`/post?id=${item.id}`}>\n              <Image\n                src={getSuo(item.content!)}\n                styles={{\n                  width: \"100%\",\n                  height: \"210px\",\n                  marginBottom: \"8px\"\n                }}\n              />\n            </Link>\n            <span>{item.title}</span>\n          </Flex>\n        );\n      })}\n    />\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { list as getPostList, Post } from \"services/post\";\nimport Overview from \"./Overview\";\n\nexport default () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  useEffect(() => {\n    getPostList(\"\", \"推荐\", 1, 10).then(res => {\n      setPosts(res.posts);\n    });\n  }, []);\n  return (\n    <>\n      <h1>编辑推荐</h1>\n      <Overview posts={posts} />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ranking as getRanking, Post } from \"services/post\";\nimport Overview from \"./Overview\";\n\nexport default () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  useEffect(() => {\n    getRanking().then(res => {\n      setPosts(res.posts);\n    });\n  }, []);\n  return (\n    <>\n      <h1>排行榜</h1>\n      <Overview posts={posts} />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Image, Flex, Menu, Grid } from \"@fluentui/react\";\nimport { getSuo } from \"services/dirty\";\nimport { list as getPostList, Post } from \"services/post\";\nimport { Link } from \"react-router-dom\";\nimport \"./Calendar.css\";\n\nexport default () => {\n  const [posts, setPosts] = useState<Record<string, Post[]>>({});\n  const [day, setDay] = useState(new Date().getDay());\n  useEffect(() => {\n    getPostList(\"新番\", \"\", 1, 100, \"nowait\").then(res => {\n      let ret: Record<string, Post[]> = {};\n      res.posts.forEach(item => {\n        let day = new Date(item.time?.split(\" \")[0]!).getDay();\n        ret[day.toString()] = ret[day.toString()] || [];\n        ret[day.toString()].push(item);\n      });\n      setPosts(ret);\n    });\n  }, []);\n  return (\n    <Flex column>\n      <h1>追番时间表</h1>\n      <Menu\n        className=\"date_list\"\n        defaultActiveIndex={day}\n        primary\n        items={[\n          { key: 0, content: \"周日\" },\n          { key: 1, content: \"周一\" },\n          { key: 2, content: \"周二\" },\n          { key: 3, content: \"周三\" },\n          { key: 4, content: \"周四\" },\n          { key: 5, content: \"周五\" },\n          { key: 6, content: \"周六\" }\n        ]}\n        onItemClick={(_, item) => {\n          setDay(item?.index!);\n        }}\n      />\n      <Grid\n        content={posts[day]?.map(item => (\n          <Flex column key={item.id} hAlign=\"center\" vAlign=\"center\">\n            <Link to={`/post?id=${item.id}`}>\n              <Image\n                src={getSuo(item.content!)}\n                circular\n                styles={{\n                  maxWidth: \"128px\",\n                  width: \"18vw\",\n                  height: \"18vw\",\n                  maxHeight: \"128px\",\n                  margin: \"12px 0 8px 0\"\n                }}\n              />\n            </Link>\n            <span>{item.title}</span>\n          </Flex>\n        ))}\n      />\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { list as getPostList, Post } from \"services/post\";\nimport Overview from \"./Overview\";\n\nexport default () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  useEffect(() => {\n    getPostList(\"bgm\", \"\", 1, 30).then(res => {\n      setPosts(res.posts);\n    });\n  }, []);\n  return (\n    <>\n      <h1>最近更新</h1>\n      <Overview posts={posts} />\n    </>\n  );\n};\n","import React from \"react\";\nimport Recommend from \"components/Recommend\";\nimport Ranking from \"components/Ranking\";\nimport Calendar from \"components/Calendar\";\nimport Latest from \"components/Latest\";\n\nexport default () => (\n  <main\n    style={{\n      padding: \"8px\"\n    }}\n  >\n    <Recommend />\n    <Ranking />\n    <Calendar />\n    <Latest />\n  </main>\n);\n","import md5 from \"blueimp-md5\";\nimport { domain } from \"config\";\nimport cookie from \"js-cookie\";\n\nexport interface User {\n  id?: number;\n  name?: string;\n  qq?: string;\n  desc?: string;\n  level?: number;\n  pwd?: string;\n}\n\nexport interface UserLoginDTO extends User {\n  name: string;\n  pwd: string;\n}\n\nexport let user: User | undefined = cookie.getJSON(\"user\");\nexport let token = cookie.get(\"token\");\n\nfunction clearCache() {\n  user = undefined;\n  token = undefined;\n  cookie.remove(\"user\");\n  cookie.remove(\"token\");\n}\n\nexport function avatar(qq?: string) {\n  if (!qq) {\n    return \"./default_avatar.jpg\";\n  }\n  if (/^[0-9]+$/.test(qq)) {\n    return `http://q1.qlogo.cn/g?b=qq&nk=${qq}&s=5`;\n  } else {\n    let hash = md5(qq);\n    return `https://cdn.v2ex.com/gravatar/${hash}`;\n  }\n}\n\nexport async function login(u: UserLoginDTO) {\n  const resp = await fetch(`${domain.admin}/user/login`, {\n    method: \"POST\",\n    body: JSON.stringify(u)\n  });\n\n  const body: { code: number; token: string; user: User } = await resp.json();\n  if (body.code === 200) {\n    user = body.user;\n    token = body.token;\n    cookie.set(\"user\", user);\n    cookie.set(\"token\", token);\n\n    return true;\n  }\n  clearCache();\n}\n\nexport async function isLogin() {\n  if (!token) return false;\n\n  // const resp = await fetch(`${domain.admin}/auth`, { credentials: \"include\" });\n  // const body: { code: number; msg: string; user: User } = await resp.json();\n  // if (body.code === 200) return true;\n  // clearCache();\n  return true;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Form,\n  ICSSInJSStyle,\n  FormFieldProps,\n  ShorthandCollection,\n  Input\n} from \"@fluentui/react\";\nimport { login } from \"services/user\";\nimport { useHistory } from \"react-router-dom\";\n\nconst fields: ShorthandCollection<FormFieldProps> = [\n  {\n    label: \"用户名\",\n    key: \"username\",\n    styles: {\n      marginBottom: \"16px\"\n    },\n    id: \"login_username\",\n    required: true\n  },\n  {\n    label: \"密码\",\n    key: \"password\",\n    styles: {\n      marginBottom: \"16px\"\n    },\n    id: \"login_password\",\n    required: true,\n    control: {\n      as: Input,\n      type: \"password\"\n    }\n  },\n  {\n    control: {\n      as: Button,\n      content: \"登录\"\n    },\n    key: \"login\"\n  }\n];\n\nconst styles: ICSSInJSStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"33%\"\n};\n\nexport default () => {\n  const history = useHistory();\n  return (\n    <Form\n      onSubmit={async () => {\n        const name = (document.getElementById(\n          \"login_username\"\n        ) as HTMLInputElement).value;\n        const pwd = (document.getElementById(\n          \"login_password\"\n        ) as HTMLInputElement).value;\n\n        if (await login({ name, pwd })) {\n          history.goBack();\n        } else {\n          alert(\"用户名或密码错误\");\n        }\n      }}\n      fields={fields}\n      styles={styles}\n    />\n  );\n};\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function useMediaQuery(query: string) {\n  const [match, setMatch] = React.useState(() => matchMedia(query).matches);\n\n  React.useEffect(() => {\n    let active = true;\n\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query]);\n\n  return match;\n}\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport function disableScreenScale() {\n  let lastTime = 0;\n  document.addEventListener(\n    \"touchstart\",\n    evt => {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    },\n    { passive: false }\n  );\n  document.addEventListener(\n    \"touchend\",\n    evt => {\n      const nowTime = new Date().getTime();\n      if (nowTime - lastTime <= 300) {\n        evt.preventDefault();\n      }\n      lastTime = nowTime;\n    },\n    { passive: false }\n  );\n}\n","import { domain } from \"config\";\n\nexport interface Video {\n  id?: number;\n  content?: string;\n  uqq?: string;\n  oid?: number;\n  title?: string;\n}\n\nexport async function pv(id: string) {\n  const resp = await fetch(`${domain.jx}/get/pv?pid=${id}`);\n  const body = await resp.json();\n  return body.pv;\n}\n\nexport async function list(id: string) {\n  const resp = await fetch(\n    `${domain.api}/videos?pid=${id}&page=1&pageSize=150`\n  );\n  const body = await resp.json();\n  return body.videos;\n}\n\nexport async function play(url: string) {\n  const resp = await fetch(`${domain.jx}/jx?url=${url}`);\n  const body = await resp.json();\n  return body;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Video, Flex } from \"@fluentui/react\";\nimport { useQuery } from \"utils\";\nimport { Link } from \"react-router-dom\";\nimport { avatar } from \"services/user\";\nimport { list as getVideoList, Video as IVideo } from \"services/video\";\nimport \"./VideoList.css\";\n\nexport function VideoList(props: { postId: string }) {\n  const [videos, setVideoList] = useState<IVideo[]>([]);\n  useEffect(() => {\n    (async () => {\n      const videoList = await getVideoList(props.postId);\n      setVideoList(videoList);\n    })();\n  }, [props.postId]);\n\n  return (\n    <div className=\"video-list\">\n      {videos?.map(item => {\n        return (\n          <Link\n            to={`/video?url=${item.content}`}\n            className=\"item\"\n            key={item.id}\n          >\n            <img src={avatar(item.uqq)} alt={item.uqq}></img>\n            <span>P {item.oid}</span>\n            <span>{item.title}</span>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default () => {\n  const query = useQuery();\n  return (\n    <Flex\n      styles={{\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Video\n        src={query.get(\"url\")!}\n        autoPlay\n        styles={{\n          width: \"100%\",\n          height: \"auto\"\n        }}\n      />\n    </Flex>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Flex } from \"@fluentui/react\";\n// @ts-ignore\nimport snarkdown from \"snarkdown\";\nimport { details as getPostDetails, Post } from \"services/post\";\nimport \"./Post.css\";\nimport { useQuery } from \"utils\";\nimport { VideoList } from \"./Video\";\n\nexport default () => {\n  const id = useQuery().get(\"id\")!;\n  const t: any = useRef(null);\n  const u: any = useRef(null);\n  const [post, setPost] = useState<Post>({});\n  useEffect(() => {\n    (async () => {\n      const details = await getPostDetails(id);\n      setPost(details);\n      const w = document.body.clientWidth;\n      if (details.tag.indexOf(\"其它\") > -1 || w < 480) {\n        t.current.style.display = \"none\";\n        u.current.style.display = \"block\";\n        u.current.innerHTML = snarkdown(details.content);\n      } else {\n        t.current.innerHTML = snarkdown(details.content);\n      }\n    })();\n  }, [id]);\n  return (\n    <Flex column>\n      <article ref={t}></article>\n      <h1>{post.title || \"少男祈祷中……\"}</h1>\n      <article ref={u} className=\"other\"></article>\n      {post.status === \"public\" ? (\n        <VideoList postId={id} />\n      ) : post.status ? (\n        <div className=\"copyright\">版权原因，该番剧未上架，请支持正版</div>\n      ) : (\n        <></>\n      )}\n    </Flex>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Post, search as getSearchList } from \"services/post\";\nimport Overview from \"components/Overview\";\nimport { useQuery } from \"utils\";\n\nexport default () => {\n  const key = useQuery().get(\"key\")!;\n  const [posts, setPosts] = useState<Post[]>([]);\n  useEffect(() => {\n    getSearchList(key).then(res => {\n      setPosts(res.posts);\n    });\n  }, [key]);\n  return <Overview posts={posts} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Input, Avatar, ICSSInJSStyle, Flex } from \"@fluentui/react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { avatar, isLogin, user } from \"services/user\";\n\nexport default () => {\n  const history = useHistory();\n  const [data, setData] = useState({ isLogin: true });\n\n  useEffect(() => {\n    (async () => {\n      setData({\n        isLogin: await isLogin()\n      });\n    })();\n  }, []);\n  return (\n    <Flex styles={headerStyle}>\n      <Link to={data.isLogin ? `/` : `/login`}>\n        <Avatar size=\"larger\" image={avatar(user?.qq)} />\n      </Link>\n      <Flex styles={searchStyle}>\n        <Input\n          fluid\n          icon=\"search\"\n          onKeyPress={evt => {\n            if (evt.key === \"Enter\") {\n              history.push(`/search?key=${evt.currentTarget.value}`);\n            }\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nconst headerStyle: ICSSInJSStyle = {\n  padding: \"4px 8px\",\n  alignItems: \"center\",\n  marginBottom: \"24px\"\n};\n\nconst searchStyle: ICSSInJSStyle = {\n  flexGrow: 1,\n  margin: \"0 8px 0 12px\"\n};\n","import React from \"react\";\nimport { Flex } from \"@fluentui/react\";\n\nexport default () => (\n  <Flex\n    styles={{\n      height: \"48px\"\n    }}\n  ></Flex>\n);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HomePage, LoginPage, PostPage, VideoPage, SearchPage } from \"pages\";\nimport Header from \"components/Header\";\nimport Footer from \"components/Footer\";\n\nexport default () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/search\">\n          <SearchPage />\n        </Route>\n        <Route path=\"/video\">\n          <VideoPage />\n        </Route>\n        <Route path=\"/post\">\n          <PostPage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider, themes } from \"@fluentui/react\";\nimport * as serviceWorker from \"serviceWorker\";\nimport \"index.css\";\nimport App from \"App\";\nimport { useMediaQuery, disableScreenScale } from \"utils\";\n\ndisableScreenScale();\n\nfunction Index() {\n  const darkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = React.useMemo(\n    () => (darkMode ? themes.teamsDark : themes.teams),\n    [darkMode]\n  );\n  return (\n    <Provider theme={theme}>\n      <App />\n    </Provider>\n  );\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}